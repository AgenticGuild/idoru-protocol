/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ValidatorMarket,
  ValidatorMarketInterface,
} from "../../../contracts/ValidatorMarket.sol/ValidatorMarket";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "address",
        name: "eas_",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientStake",
    type: "error",
  },
  {
    inputs: [],
    name: "NotValidator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "attestationId",
        type: "bytes32",
      },
    ],
    name: "Attested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "challenger",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "attestationId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "Challenged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Slashed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "attestationId",
        type: "bytes32",
      },
    ],
    name: "attest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "attestationId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "slashAmount",
        type: "uint256",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eas",
    outputs: [
      {
        internalType: "contract IEASLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "validatorStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516108a53803806108a583398101604081905261002f916100ec565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61006781610080565b50506001600160a01b039182166080521660a05261012f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100e757600080fd5b919050565b60008060006060848603121561010157600080fd5b61010a846100d0565b9250610118602085016100d0565b9150610126604085016100d0565b90509250925092565b60805160a05161073c6101696000396000818161015d015261037f015260008181610116015281816102ad015261041e015261073c6000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063715018a611610066578063715018a6146101505780638150864d146101585780638da5cb5b1461017f578063a694fc3a14610190578063f2fde38b146101a357600080fd5b806323c3617f146100a35780632e17de78146100b857806339b7fcc6146100cb57806343e7b149146100fe57806351ed6a3014610111575b600080fd5b6100b66100b1366004610616565b6101b6565b005b6100b66100c6366004610616565b610215565b6100eb6100d936600461064b565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b6100b661010c36600461066d565b61031f565b6101387f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100f5565b6100b66103e8565b6101387f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b0316610138565b6100b661019e366004610616565b6103fc565b6100b66101b136600461064b565b6104bb565b3360009081526001602052604081205490036101e557604051632ec5b44960e01b815260040160405180910390fd5b604051819033907fd04d605b1bc3879d408b185f774ce47726f0e4d808b2e00c3881d217281bd1f190600090a350565b33600090815260016020526040902054818110156102695760405162461bcd60e51b815260206004820152600c60248201526b1a5b9cdd59999a58da595b9d60a21b60448201526064015b60405180910390fd5b61027382826106b8565b336000818152600160205260409081902092909255905163a9059cbb60e01b81526004810191909152602481018390526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156102f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031a91906106d1565b505050565b6103276104f9565b6040516001600160a01b03831690849033907f7cf8cbaa9712da0fc6fee2352a1dd5e1bf7209abb56df51e0c8fe43a2eff4ddb90600090a46103698282610526565b604051635bae3ee360e11b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b75c7dc690602401600060405180830381600087803b1580156103cb57600080fd5b505af11580156103df573d6000803e3d6000fd5b50505050505050565b6103f06104f9565b6103fa60006105c6565b565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af115801561046f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049391906106d1565b5033600090815260016020526040812080548392906104b39084906106f3565b909155505050565b6104c36104f9565b6001600160a01b0381166104ed57604051631e4fbdf760e01b815260006004820152602401610260565b6104f6816105c6565b50565b6000546001600160a01b031633146103fa5760405163118cdaa760e01b8152336004820152602401610260565b6001600160a01b03821660009081526001602052604090205481811015610560576040516378de4a6960e11b815260040160405180910390fd5b61056a82826106b8565b6001600160a01b038416600081815260016020526040908190209290925590517f4ed05e9673c26d2ed44f7ef6a7f2942df0ee3b5e1e17db4b99f9dcd261a339cd906105b99085815260200190565b60405180910390a2505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561062857600080fd5b5035919050565b80356001600160a01b038116811461064657600080fd5b919050565b60006020828403121561065d57600080fd5b6106668261062f565b9392505050565b60008060006060848603121561068257600080fd5b833592506106926020850161062f565b9150604084013590509250925092565b634e487b7160e01b600052601160045260246000fd5b818103818111156106cb576106cb6106a2565b92915050565b6000602082840312156106e357600080fd5b8151801515811461066657600080fd5b808201808211156106cb576106cb6106a256fea26469706673582212205ce619dcc96ccae1d1f47b68c56e684d30e5196bba58414cc5f977fadd36ff2564736f6c63430008180033";

type ValidatorMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ValidatorMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ValidatorMarket__factory extends ContractFactory {
  constructor(...args: ValidatorMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    token_: AddressLike,
    eas_: AddressLike,
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(token_, eas_, owner_, overrides || {});
  }
  override deploy(
    token_: AddressLike,
    eas_: AddressLike,
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(token_, eas_, owner_, overrides || {}) as Promise<
      ValidatorMarket & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ValidatorMarket__factory {
    return super.connect(runner) as ValidatorMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ValidatorMarketInterface {
    return new Interface(_abi) as ValidatorMarketInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ValidatorMarket {
    return new Contract(address, _abi, runner) as unknown as ValidatorMarket;
  }
}
